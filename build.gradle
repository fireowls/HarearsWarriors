plugins {
    id 'application'
}


allprojects {
    sourceCompatibility = '1.8'
    repositories {
        mavenCentral()
    }
}

version = '1.0-DEV'
applicationName = 'HarearsWarriors'
mainClassName = 'com.fireowls.harearswarriors.plugin.HWLauncher'

dependencies {
    compile project(':DesktopLauncher')
    testCompile 'junit:junit:4.12'
}


subprojects { project ->

    task deployReport(type: Copy) { task ->
        dependsOn ":$task.project.name:test"
        group 'pages'
        description 'deploy the report of tests'

        from "${file("build/reports/tests/").path}"
        into "../pages/tests/$task.project.name"
    }

    task deployDoc(type: Copy) { task ->
        dependsOn ":$task.project.name:javadoc"
        group 'pages'
        description 'deploy the javadoc'
        from "${file('build/docs/javadoc/').path}"
        into "../pages/docs/$task.project.name"
    }

    task deploy { task ->
        description 'deploy report and javadoc'
        group 'pages'
        finalizedBy ":$task.project.name:deployReport"
        finalizedBy ":$task.project.name:deployDoc"
    }

    task clearAssets(type: Delete) {
        description 'clear assets file'
        group 'assets'
        delete "$buildDir/assets"
    }

    task copyTestAssets(type: Copy) {
        description 'deploy assets for test'
        group 'assets'
        from '../assets/test'
        into "assets"
        dependsOn clearAssets
    }

    task cleanPages {
        group 'pages'
        description 'clean pages'
        file('pages').deleteDir()
    }

    clean.finalizedBy cleanPages
    test.dependsOn copyTestAssets

}


task deployPages {
    group 'pages'
    description 'deploy for gh-pages'
    dependsOn clean
    subprojects.forEach { task ->
        if (task.project.name != 'PanelPages')
            finalizedBy ":$task.project.name:deploy"
    }
}

task generatePages {
    group 'pages'
    description 'generate the main page of gh-pages'
    doLast {

        def index = new File('PanelPages/src/index.html').text

        def docs = ''
        def tests = ''
        subprojects.forEach { project ->
            if (project.name != 'PanelPages') {
                docs += "<li><a href=\"docs/$project.name/index.html\">$project.name</a></li>"
                tests += "<li><a href=\"tests/$project.name/test/index.html\">$project.name</a></li>"
            }
        }
        index = index.replace('__documentationlist__', docs)
        index = index.replace('__testsreportslist__', tests)

        File indexFile = new File('pages/index.html')
        file('pages').mkdir()
        indexFile.createNewFile()
        indexFile.text = index

    }
    finalizedBy ':PanelPages:copySources'
    finalizedBy deployPages
}
